#!/bin/bash
###############################################################################
#  auto_commit.sh ‚Äî debug edition
#  –õ–æ–≥:  auto_commit_dbg.log  (–≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ –∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ)
###############################################################################
set -euo pipefail          # –ø–∞–¥–∞–µ–º –Ω–∞ –ª—é–±–æ–π –æ—à–∏–±–∫–µ
exec > >(tee -a auto_commit_dbg.log) 2>&1
set -x                     # –≤—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É

echo "==== $(date '+%F %T') START ===="

FILES=(auto_commit.sh update_from_github.sh Default.yaml)

# 0. –£–±–∏—Ä–∞–µ–º –∏–∑-–ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤—Å—ë –ª–∏—à–Ω–µ–µ (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ —Å–Ω–æ–≤–∞ –¥–æ–±–∞–≤–∏–ª)
git rm --cached --ignore-unmatch auto_commit.log || true

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ whitelisted-—Ñ–∞–π–ª–∞—Ö
git fetch origin main
NEED_PUSH=false
for f in "${FILES[@]}"; do
  if ! git diff --quiet origin/main -- "$f"; then
    NEED_PUSH=true; break
  fi
done
"$NEED_PUSH" || { echo "–Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî –≤—ã—Ö–æ–¥"; echo "==== END ===="; exit 0; }

# 2. –ö–æ–º–º–∏—Ç–∏–º –ª–æ–∫–∞–ª—å–Ω—ã–µ ¬´–≤–∏—Å—è–∫–∏¬ª, –µ—Å–ª–∏ –µ—Å—Ç—å
if ! git diff --quiet || ! git diff --cached --quiet; then
  git add -A
  git commit -m "üõ† –ª–æ–∫–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç"
fi

# 3. –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º origin/main —á–µ—Ä–µ–∑ merge
git pull origin main --no-edit

# 4. –ò—Ç–æ–≥–æ–≤—ã–π –∫–æ–º–º–∏—Ç –∏ push
MSG="auto-update: $(date '+%H:%M:%S')"
git add "${FILES[@]}"
git commit -m "$MSG" || echo "skip commit (diff –ø—É—Å—Ç)"
git push origin main

echo "==== $(date '+%F %T') END ===="