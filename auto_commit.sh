#!/usr/bin/env bash
###############################################################################
#  auto_commit.sh  ‚Äî  PROD
#  ¬∑ –ª–æ–≥: auto_commit.log (—Å–≤–µ–∂–∏–µ –±–ª–æ–∫–∏ —Å–≤–µ—Ä—Ö—É, —Ö—Ä–∞–Ω–∏—Ç—Å—è 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)
#  ¬∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç: auto_commit.sh, update_from_github.sh, Default.yaml
#  ¬∑ commit-msg: ¬´add monolead¬ª ¬∑ ¬´remove AdsPower Global¬ª ¬∑ ¬´update Default.yaml¬ª
###############################################################################

set -euo pipefail
cd "$(dirname "$0")"

FILES=(auto_commit.sh update_from_github.sh Default.yaml)
LOG="auto_commit.log"
TMP_LOG="$(mktemp)"

##############################################################################
#  –§-—Ü–∏—è prepend-–ª–æ–≥–∞ (–≤—Å–µ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ trap)
##############################################################################
goto_log() {
  { cat "$TMP_LOG"; echo; [[ -f $LOG ]] && cat "$LOG"; } > "${LOG}.new"

  # –æ—Å—Ç–∞–≤–ª—è–µ–º 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±–ª–æ–∫–æ–≤ ¬´==== ‚Ä¶ START ===="
  awk '
    /^==== .* START ====/ {blk++}
    {buf[blk] = buf[blk] $0 ORS}
    END {for (i = blk; i > blk-10 && i > 0; i--) printf "%s", buf[i]}
  ' "${LOG}.new" > "$LOG"

  rm -f "$TMP_LOG" "${LOG}.new"
}
trap goto_log EXIT   # –ª–æ–≥ –ø–∏—à–µ—Ç—Å—è –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ / exit

##############################################################################
echo "==== $(date '+%F %T') START ====" | tee  "$TMP_LOG"

# 0. –ª–æ–≥ –Ω–µ –¥–æ–ª–∂–µ–Ω —Ç—Ä–µ–∫–∞—Ç—å—Å—è
git rm --cached --ignore-unmatch "$LOG" 2>/dev/null || true

# 1. –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è?
git fetch origin main
need_push=false
for f in "${FILES[@]}"; do
  if ! git diff --quiet origin/main -- "$f"; then need_push=true; break; fi
done
if [[ "$need_push" = false ]]; then
  echo "–Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî –≤—ã—Ö–æ–¥" | tee -a "$TMP_LOG"
  exit 0
fi

# 2. –ª–æ–∫–∞–ª—å–Ω—ã–µ ¬´–≤–∏—Å—è–∫–∏¬ª
if ! git diff --quiet || ! git diff --cached --quiet; then
  git add -A
  git commit -m "üõ† –ª–æ–∫–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç" | tee -a "$TMP_LOG"
fi

# 3. pull (merge)
git pull origin main --no-edit | tee -a "$TMP_LOG"

# 4. commit-msg –∏–∑ –ø–µ—Ä–≤–æ–π –∏–∑–º–µ–Ω—ë–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ Default.yaml
diff_line=$(git diff origin/main -- Default.yaml \
            | grep -E '^[-+]\s*(DOMAIN-KEYWORD|PROCESS-NAME)' | head -n1 || true)
case "$diff_line" in
  +*) MSG="add    $(echo "$diff_line" | cut -d',' -f2 | xargs)";;
  -*) MSG="remove $(echo "$diff_line" | cut -d',' -f2 | xargs)";;
   *) MSG="update Default.yaml";;
esac

# 5. —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–º–∏—Ç + push
git add "${FILES[@]}"
if ! git diff --cached --quiet; then
  git commit -m "$MSG" | tee -a "$TMP_LOG"
else
  echo "skip commit (diff –ø—É—Å—Ç)" | tee -a "$TMP_LOG"
fi

if git push origin main 2>&1 | tee -a "$TMP_LOG"; then
  echo "‚úÖ push complete ‚Äî $MSG" | tee -a "$TMP_LOG"
else
  echo "‚ùå push failed"         | tee -a "$TMP_LOG"
fi

echo "==== $(date '+%F %T') END ====" | tee -a "$TMP_LOG"